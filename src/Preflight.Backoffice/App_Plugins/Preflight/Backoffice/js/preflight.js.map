{"version":3,"names":[],"mappings":"","sources":["preflight.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nvar _servicesModule = require(\"./resources/_servicesModule\");\n\nvar _componentsModule = require(\"./components/_componentsModule\");\n\nvar _controllersModule = require(\"./controllers/_controllersModule\");\n\nvar _pluginsModule = require(\"./plugins/_pluginsModule\");\n\nvar name = 'preflight';\nangular.module(name, [_servicesModule.ServicesModule, _componentsModule.ComponentsModule, _controllersModule.ControllersModule, _pluginsModule.PluginsModule]);\nangular.module('umbraco').requires.push(name);\n\n},{\"./components/_componentsModule\":2,\"./controllers/_controllersModule\":8,\"./plugins/_pluginsModule\":13,\"./resources/_servicesModule\":16}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ComponentsModule = void 0;\n\nvar _card = require(\"./card/card.component\");\n\nvar _progresscircle = require(\"./progresscircle/progresscircle.component\");\n\nvar _resultintro = require(\"./resultintro.component\");\n\nvar _stateicon = require(\"./stateicon/stateicon.component\");\n\nvar ComponentsModule = angular.module('preflight.components', []).component(_card.CardComponent.name, _card.CardComponent).component(_resultintro.ResultIntroComponent.name, _resultintro.ResultIntroComponent).component(_stateicon.StateIconComponent.name, _stateicon.StateIconComponent).component(_progresscircle.ProgressCircleComponent.name, _progresscircle.ProgressCircleComponent).name;\nexports.ComponentsModule = ComponentsModule;\n\n},{\"./card/card.component\":3,\"./progresscircle/progresscircle.component\":4,\"./resultintro.component\":5,\"./stateicon/stateicon.component\":6}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CardComponent = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Card = /*#__PURE__*/function () {\n  function Card(localizationService) {\n    _classCallCheck(this, Card);\n\n    _defineProperty(this, \"cardClass\", 'pass');\n\n    _defineProperty(this, \"cardScoreClass\", 'pass-color');\n\n    _defineProperty(this, \"localizationService\", void 0);\n\n    this.localizationService = localizationService;\n  }\n\n  _createClass(Card, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      if (this.failed) {\n        this.cardClass = 'fail';\n        this.cardScoreClass = 'fail-color';\n      }\n\n      if (this.title[0] === '@') {\n        this.localizationService.localize(this.title, this.tokens).then(function (localizedTitle) {\n          return _this.title = localizedTitle;\n        });\n      }\n\n      if (this.subtitle[0] === '@') {\n        this.localizationService.localize(this.subtitle, this.tokens).then(function (localizedSubtitle) {\n          return _this.subtitle = localizedSubtitle;\n        });\n      }\n    }\n  }]);\n\n  return Card;\n}();\n\n_defineProperty(Card, \"template\", \"\\n        <div class=\\\"card {{ ::$ctrl.cardClass }}\\\">\\n            <span class=\\\"card-score {{ ::$ctrl.cardScoreClass }}\\\" ng-bind=\\\"::$ctrl.score\\\"></span>\\n            <span class=\\\"card-title\\\">\\n                {{ ::$ctrl.title }}<br />\\n                {{ ::$ctrl.subtitle }}\\n            </span>\\n        </div>\");\n\nvar CardComponent = {\n  transclude: true,\n  name: 'preflightCard',\n  bindings: {\n    title: '@?',\n    subtitle: '@?',\n    failed: '<',\n    score: '<',\n    tokens: '<'\n  },\n  template: Card.template,\n  controller: Card\n};\nexports.CardComponent = CardComponent;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProgressCircleComponent = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ProgressCircle = function ProgressCircle($element) {\n  var _this = this;\n\n  _classCallCheck(this, ProgressCircle);\n\n  _defineProperty(this, \"r\", void 0);\n\n  _defineProperty(this, \"$element\", void 0);\n\n  _defineProperty(this, \"$onChanges\", function () {\n    _this.draw();\n  });\n\n  _defineProperty(this, \"draw\", function () {\n    var percent = Math.round(_this.percentage);\n    percent = percent > 100 ? 100 : percent || 0; // calculating the circle's highlight\n\n    var pathLength = _this.r * Math.PI * 2 * percent / 100; // Full circle length\n\n    _this.dashArray = \"\".concat(pathLength, \",100\"); // set font size\n\n    _this.percentageSize = _this.size * 0.3 + 'px'; // use rounded percentage\n\n    _this.label = \"\".concat(percent, \"%\");\n  });\n\n  this.r = $element.find('.umb-progress-circle__highlight').attr('r');\n};\n\n_defineProperty(ProgressCircle, \"template\", \"\\n        <div class=\\\"umb-progress-circle preflight-progress-circle\\\" ng-style=\\\"{'width': $ctrl.size, 'height': $ctrl.size }\\\">\\n            <svg class=\\\"umb-progress-circle__view-box\\\" viewBox=\\\"0 0 33.83098862 33.83098862\\\"> \\n                <circle class=\\\"umb-progress-circle__highlight--{{ $ctrl.background }}\\\" cx=\\\"16.91549431\\\" cy=\\\"16.91549431\\\" r=\\\"15.91549431\\\" fill=\\\"none\\\" stroke-width=\\\".5\\\"></circle>\\n                <circle class=\\\"umb-progress-circle__highlight umb-progress-circle__highlight--{{ $ctrl.foreground }}\\\"\\n                    cx=\\\"16.91549431\\\" cy=\\\"16.91549431\\\" r=\\\"15.91549431\\\" stroke-linecap=\\\"round\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-dasharray=\\\"{{ $ctrl.dashArray }}\\\"></circle>\\n            </svg> \\n            <div ng-style=\\\"{'font-size': $ctrl.percentageSize}\\\" class=\\\"umb-progress-circle__percentage\\\">\\n                {{ $ctrl.label }}\\n                <small>pass rate</small>                \\n            </div>\\n        </div>\");\n\nvar ProgressCircleComponent = {\n  transclude: true,\n  name: 'progressCircle',\n  bindings: {\n    size: '@?',\n    percentage: '<',\n    done: '@',\n    foreground: '@',\n    background: '@'\n  },\n  template: ProgressCircle.template,\n  controller: ProgressCircle\n};\nexports.ProgressCircleComponent = ProgressCircleComponent;\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResultIntroComponent = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ResultIntro = /*#__PURE__*/function () {\n  /**\r\n   * Directive used to render the heading for a plugin in the results view\r\n   * Send a stringified array as the tokens attribute to replace %0%, %1% .. %n% in the localized string\r\n   */\n  function ResultIntro(localizationService) {\n    _classCallCheck(this, ResultIntro);\n\n    _defineProperty(this, \"localizationService\", void 0);\n\n    this.localizationService = localizationService;\n  }\n\n  _createClass(ResultIntro, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this = this;\n\n      if (this.passText[0] === '@') {\n        this.localizationService.localize(this.passText, this.tokens).then(function (localizedPassText) {\n          return _this.passText = localizedPassText;\n        });\n      }\n\n      if (this.heading[0] === '@') {\n        this.localizationService.localize(this.heading, this.tokens).then(function (localizedHeading) {\n          return _this.heading = localizedHeading;\n        });\n      }\n    }\n  }]);\n\n  return ResultIntro;\n}();\n\n_defineProperty(ResultIntro, \"template\", \"\\n        <h5 ng-bind=\\\"::$ctrl.heading\\\" class=\\\"mt0\\\"></h5>\\n        <span ng-if=\\\"$ctrl.pass\\\" ng-bind=\\\"::$ctrl.passText\\\"></span>\");\n\nvar ResultIntroComponent = {\n  transclude: true,\n  name: 'preflightResultIntro',\n  bindings: {\n    tokens: '<',\n    passText: '@?',\n    heading: '@?',\n    pass: '<'\n  },\n  template: ResultIntro.template,\n  controller: ResultIntro\n};\nexports.ResultIntroComponent = ResultIntroComponent;\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateIconComponent = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar StateIcon = /*#__PURE__*/function () {\n  function StateIcon() {\n    _classCallCheck(this, StateIcon);\n\n    _defineProperty(this, \"icon\", 'power');\n\n    _defineProperty(this, \"className\", 'disabled');\n  }\n\n  _createClass(StateIcon, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      if (!this.disabled) {\n        this.icon = this.failed ? 'delete' : 'check';\n        this.className = this.failed ? 'fail' : 'pass';\n      }\n    }\n  }]);\n\n  return StateIcon;\n}();\n\n_defineProperty(StateIcon, \"template\", \"\\n        <div class=\\\"state-icon {{ ::$ctrl.className }}\\\">\\n            <umb-icon icon=\\\"icon-{{ ::$ctrl.icon }}\\\"></umb-icon>\\n        </div>\");\n\nvar StateIconComponent = {\n  transclude: true,\n  name: 'preflightStateIcon',\n  bindings: {\n    failed: '<',\n    disabled: '<'\n  },\n  template: StateIcon.template,\n  controller: StateIcon\n};\nexports.StateIconComponent = StateIconComponent;\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.constants = void 0;\nvar constants = {\n  checkboxlist: 'checkboxlist',\n  multipletextbox: 'multipletextbox'\n};\nexports.constants = constants;\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ControllersModule = void 0;\n\nvar _preflight = require(\"./preflight.controller\");\n\nvar _notification = require(\"./notification.controller\");\n\nvar _settings = require(\"./settings.controller\");\n\nvar ControllersModule = angular.module('preflight.controllers', []).controller(_preflight.PreflightController.controllerName, _preflight.PreflightController).controller(_notification.NotificationController.controllerName, _notification.NotificationController).controller(_settings.SettingsController.controllerName, _settings.SettingsController).name;\nexports.ControllersModule = ControllersModule;\n\n},{\"./notification.controller\":9,\"./preflight.controller\":10,\"./settings.controller\":11}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NotificationController = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar NotificationController = function NotificationController() {\n  _classCallCheck(this, NotificationController);\n\n  _defineProperty(this, \"saveCancelled\", void 0);\n};\n\nexports.NotificationController = NotificationController;\n\n_defineProperty(NotificationController, \"controllerName\", 'preflight.notification.controller');\n\n},{}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PreflightController = void 0;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PreflightController = /*#__PURE__*/function () {\n  function PreflightController($scope, $rootScope, $element, $timeout, editorState, preflightService, preflightHub) {\n    var _this = this;\n\n    _classCallCheck(this, PreflightController);\n\n    _defineProperty(this, \"$scope\", void 0);\n\n    _defineProperty(this, \"$rootScope\", void 0);\n\n    _defineProperty(this, \"$element\", void 0);\n\n    _defineProperty(this, \"$timeout\", void 0);\n\n    _defineProperty(this, \"editorState\", void 0);\n\n    _defineProperty(this, \"preflightService\", void 0);\n\n    _defineProperty(this, \"preflightHub\", void 0);\n\n    _defineProperty(this, \"dirtyHashes\", {});\n\n    _defineProperty(this, \"validPropTypes\", void 0);\n\n    _defineProperty(this, \"propsBeingChecked\", []);\n\n    _defineProperty(this, \"propertiesToTrack\", []);\n\n    _defineProperty(this, \"dirtyProps\", []);\n\n    _defineProperty(this, \"results\", {\n      properties: []\n    });\n\n    _defineProperty(this, \"jsonProperties\", ['Umbraco.Grid', 'Umbraco.NestedContent']);\n\n    _defineProperty(this, \"blockListEditorAlias\", 'Umbraco.BlockList');\n\n    _defineProperty(this, \"noTests\", false);\n\n    _defineProperty(this, \"percentageDone\", 20);\n\n    _defineProperty(this, \"progressStep\", 0);\n\n    _defineProperty(this, \"activeVariant\", void 0);\n\n    _defineProperty(this, \"joinList\", function (arr) {\n      var outStr;\n\n      if (arr.length === 1) {\n        outStr = arr[0];\n      } else if (arr.length === 2) {\n        outStr = arr.join(' and ');\n      } else if (arr.length > 2) {\n        outStr = arr.slice(0, -1).join(', ') + ', and ' + arr.slice(-1);\n      }\n\n      return outStr;\n    });\n\n    _defineProperty(this, \"getHash\", function (s) {\n      return s ? s.split('').reduce(function (a, b) {\n        a = (a << 5) - a + b.charCodeAt(0);\n        return a & a;\n      }, 0) : 1;\n    });\n\n    _defineProperty(this, \"getProperty\", function (alias) {\n      var _iterator = _createForOfIteratorHelper(_this.editorState.current.variants.find(function (x) {\n        return x.active;\n      }).tabs),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var tab = _step.value;\n\n          var _iterator2 = _createForOfIteratorHelper(tab.properties),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var prop = _step2.value;\n\n              if (prop.alias === alias) {\n                return prop;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n\n    _defineProperty(this, \"onComplete\", function () {\n      // it's possible no tests ran, in which case results won't exist\n      _this.noTests = _this.results.properties.every(function (x) {\n        return !x.plugins.length;\n      });\n\n      if (_this.noTests) {\n        _this.$scope.model.badge = undefined;\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(_this.results.properties),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var p = _step3.value;\n          p.disabled = p.failedCount === -1;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      _this.showSuccessMessage = !_this.results.failed && !_this.noTests;\n      _this.done = true;\n    });\n\n    _defineProperty(this, \"setBadgeCount\", function (pending) {\n      if (pending) {\n        _this.$scope.model.badge = {\n          type: 'warning'\n        };\n        return;\n      }\n\n      if (_this.results && _this.results.failedCount > 0) {\n        _this.$scope.model.badge = {\n          count: _this.results.failedCount,\n          type: 'alert --error-badge pf-block'\n        };\n      } else {\n        _this.$scope.model.badge = {\n          type: 'success icon-'\n        };\n      }\n    });\n\n    _defineProperty(this, \"getCurrentCulture\", function () {\n      return _this.activeVariant.language ? _this.activeVariant.language.culture : '';\n    });\n\n    _defineProperty(this, \"rebindResult\", function (data) {\n      console.log(data.label, data);\n      var newProp = true;\n      var totalTestsRun = 0;\n\n      var existingProp = _this.results.properties.find(function (x) {\n        return x.label === data.label;\n      });\n\n      if (existingProp) {\n        existingProp = _extends(existingProp, data);\n        existingProp.loading = false;\n        newProp = false;\n      } // a new property will have a temporary placeholder - remove it\n      // _temp ensures grid with multiple editors only removes the correct temp entry\n\n\n      if (newProp && !data.remove && data.failedCount !== -1) {\n        var tempIndex = _this.results.properties.findIndex(function (p) {\n          return p.name === \"\".concat(data.name, \"_temp\");\n        });\n\n        if (tempIndex !== -1) {\n          _this.results.properties.splice(tempIndex, 1);\n        }\n\n        _this.results.properties.push(data);\n      }\n\n      _this.results.properties = _this.results.properties.filter(function (x) {\n        return x.remove === false;\n      });\n      _this.results.properties = _this.results.properties.filter(function (x) {\n        return x.failedCount > -1;\n      });\n      _this.results.failedCount = _this.results.properties.reduce(function (prev, cur) {\n        totalTestsRun += cur.totalTests;\n        return prev + cur.failedCount;\n      }, 0);\n      _this.results.failed = _this.results.failedCount > 0;\n      _this.propsBeingCheckedStr = _this.joinList(_this.propsBeingChecked.splice(_this.propsBeingChecked.indexOf(data.name), 1));\n      _this.percentageFailed = (totalTestsRun - _this.results.failedCount) / totalTestsRun * 100;\n    });\n\n    _defineProperty(this, \"checkDirty\", function () {\n      _this.dirtyProps = [];\n      _this.hasDirty = false;\n\n      var _iterator4 = _createForOfIteratorHelper(_this.propertiesToTrack),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var prop = _step4.value;\n\n          var currentValue = _this.getProperty(prop.alias).value;\n\n          if (prop.editor === _this.blockListEditorAlias) {\n            currentValue = JSON.stringify(currentValue.contentData);\n          } else {\n            currentValue = _this.jsonProperties.includes(prop.editor) ? JSON.stringify(currentValue) : currentValue;\n          }\n\n          var hash = _this.getHash(currentValue);\n\n          if (_this.dirtyHashes[prop.label] && _this.dirtyHashes[prop.label] !== hash) {\n            _this.dirtyProps.push({\n              name: prop.label,\n              value: currentValue,\n              editor: prop.editor\n            });\n\n            _this.dirtyHashes[prop.label] = hash;\n            _this.hasDirty = true;\n          } else if (!_this.dirtyHashes[prop.label]) {\n            _this.dirtyHashes[prop.label] = hash;\n          }\n        } // if dirty properties exist, create a simple model for each and send the lot off for checking\n        // response comes via the signalr hub so is not handled here\n\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      if (_this.hasDirty) {\n        _this.$timeout(function () {\n          _this.dirtyProps.forEach(function (prop) {\n            var _iterator5 = _createForOfIteratorHelper(_this.results.properties.filter(function (p) {\n              return p.name === prop.name;\n            })),\n                _step5;\n\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var existing = _step5.value;\n\n                if (existing) {\n                  existing.open = false;\n                  existing.failedCount = -1;\n                } else {\n                  // generate new placeholder for pending results - this is removed when the response is returned\n                  _this.results.properties.push({\n                    label: prop.name,\n                    open: false,\n                    failed: false,\n                    failedCount: -1,\n                    name: \"\".concat(prop.name, \"_temp\")\n                  });\n                }\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n\n            _this.propsBeingChecked.push(prop.name);\n          });\n\n          _this.propsBeingCheckedStr = _this.joinList(_this.propsBeingChecked);\n          var payload = {\n            properties: _this.dirtyProps,\n            culture: _this.getCurrentCulture(),\n            id: _this.editorState.current.id\n          };\n\n          _this.setBadgeCount(true);\n\n          _this.done = false;\n\n          _this.preflightService.checkDirty(payload);\n        });\n      }\n    });\n\n    _defineProperty(this, \"initSignalR\", function () {\n      _this.preflightHub.initHub(function (hub) {\n        hub.on('preflightTest', function (e) {\n          _this.rebindResult(e);\n\n          _this.setBadgeCount();\n        });\n        hub.on('preflightComplete', function () {\n          return _this.onComplete();\n        });\n        hub.start(function () {\n          /**\r\n           * Check all properties when the controller loads. Won't re-run when changing between apps\r\n           * but needs to happen after the hub loads\r\n           */\n          _this.$timeout(function () {\n            _this.setBadgeCount(true);\n\n            _this.checkDirty(); // builds initial hash array, but won't run anything                    \n\n\n            _this.preflightService.check(_this.editorState.current.id, _this.getCurrentCulture());\n          });\n        });\n      });\n    });\n\n    this.$scope = $scope;\n    this.$rootScope = $rootScope;\n    this.$element = $element;\n    this.$timeout = $timeout;\n    this.editorState = editorState;\n    this.preflightService = preflightService;\n    this.preflightHub = preflightHub;\n    this.validPropTypes = Umbraco.Sys.ServerVariables.Preflight.PropertyTypesToCheck;\n    this.$scope.model.badge = {\n      type: 'info'\n    };\n    $rootScope.$on('app.tabChange', function (e, data) {\n      if (data.alias === 'preflight') {\n        // collapse open nc controls, timeouts prevent $apply errors\n        var _iterator6 = _createForOfIteratorHelper(document.querySelectorAll('.umb-nested-content__item--active .umb-nested-content__header-bar')),\n            _step6;\n\n        try {\n          var _loop = function _loop() {\n            var openNc = _step6.value;\n            $timeout(function () {\n              return openNc.click();\n            });\n          };\n\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n\n        $timeout(function () {\n          _this.checkDirty();\n\n          _this.setBadgeCount();\n        });\n      }\n    });\n    $rootScope.$on('showPreflight', function (event, data) {\n      if (data.nodeId === $scope.content.id) {\n        // needs to find app closest to current scope\n        var appLink = $element.closest('form').find('[data-element=\"sub-view-preflight\"]');\n\n        if (appLink) {\n          appLink.click();\n        }\n      }\n    });\n  }\n  /**\r\n   * \r\n   * @param {any} arr\r\n   */\n\n\n  _createClass(PreflightController, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this2 = this;\n\n      this.activeVariant = this.editorState.current.variants.find(function (x) {\n        return x.active;\n      });\n      this.propertiesToTrack = [];\n\n      if (this.activeVariant) {\n        this.activeVariant.tabs.forEach(function (x) {\n          _this2.propertiesToTrack = _this2.propertiesToTrack.concat(x.properties.map(function (x) {\n            if (_this2.validPropTypes.includes(x.editor)) {\n              return {\n                editor: x.editor,\n                alias: x.alias,\n                label: x.label\n              };\n            }\n          })).filter(function (x) {\n            return x;\n          });\n        }); // array will have length, as app is only sent on types with testable properties\n\n        if (this.propertiesToTrack.length) {\n          this.initSignalR();\n        }\n      }\n    }\n  }]);\n\n  return PreflightController;\n}();\n\nexports.PreflightController = PreflightController;\n\n_defineProperty(PreflightController, \"controllerName\", 'preflight.controller');\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SettingsController = void 0;\n\nvar _constants = require(\"../constants\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SettingsController = /*#__PURE__*/function () {\n  function SettingsController($scope, $q, notificationsService, languageResource, localizationService, preflightService) {\n    var _this = this;\n\n    _classCallCheck(this, SettingsController);\n\n    _defineProperty(this, \"$scope\", void 0);\n\n    _defineProperty(this, \"$q\", void 0);\n\n    _defineProperty(this, \"languageResource\", void 0);\n\n    _defineProperty(this, \"localizationService\", void 0);\n\n    _defineProperty(this, \"notificationsService\", void 0);\n\n    _defineProperty(this, \"preflightService\", void 0);\n\n    _defineProperty(this, \"languages\", []);\n\n    _defineProperty(this, \"tabs\", []);\n\n    _defineProperty(this, \"settings\", []);\n\n    _defineProperty(this, \"currentLanguage\", void 0);\n\n    _defineProperty(this, \"languageChangeWatcher\", void 0);\n\n    _defineProperty(this, \"testablePropertiesWatcher\", void 0);\n\n    _defineProperty(this, \"watchTestableProperties\", function () {\n      _this.testablePropertiesWatcher = _this.$scope.$watch(function () {\n        return _this.settings.find(function (x) {\n          return x.alias === 'propertiesToTest';\n        }).value;\n      }, function (newVal) {\n        if (newVal) {\n          var propertiesToModify = _this.settings.filter(function (x) {\n            return x.alias.includes('PropertiesToTest') && x.alias !== 'propertiesToTest';\n          });\n\n          var _iterator = _createForOfIteratorHelper(propertiesToModify),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var prop = _step.value;\n\n              // use the prop alias to find the checkbox set\n              var _iterator2 = _createForOfIteratorHelper(document.querySelectorAll(\"umb-checkbox[name*=\\\"\".concat(prop.alias, \"\\\"]\"))),\n                  _step2;\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var checkbox = _step2.value;\n                  checkbox.querySelector('.umb-form-check').classList[newVal.indexOf(checkbox.getAttribute('value')) === -1 ? 'add' : 'remove']('pf-disabled');\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }, true);\n    });\n\n    _defineProperty(this, \"saveSettings\", function () {\n      // ensure the current language is correctly mapped to the sync model\n      _this.settings.forEach(function (s) {\n        var syncSetting = _this.settingsSyncModel.find(function (x) {\n          return x.alias === s.alias;\n        });\n\n        if (!syncSetting.value) {\n          syncSetting.value = {};\n        }\n\n        syncSetting.value[_this.currentLanguage] = s.value ? s.value : s.view.includes(_constants.constants.checkboxlist) || s.view.includes(_constants.constants.multipletextbox) ? [] : null;\n      }); // ensure readability is valid\n\n\n      var validRange = true;\n\n      _this.languages.forEach(function (l) {\n        var culture = l.culture;\n        var min = parseInt(_this.settingsSyncModel.find(function (x) {\n          return x.alias === 'readabilityTargetMinimum';\n        }).value[culture]);\n        var max = parseInt(_this.settingsSyncModel.find(function (x) {\n          return x.alias === 'readabilityTargetMaximum';\n        }).value[culture]);\n\n        if (min > max) {\n          _this.notificationsService.error('ERROR', \"Unable to save settings - readability minimum cannot be greater than readability maximum (\".concat(l.name, \")\"));\n\n          validRange = false;\n        } else if (min + 10 > max) {\n          _this.notificationsService.warning('WARNING', \"Readability range is narrow (\".concat(l.name, \")\"));\n        }\n      });\n\n      if (validRange) {\n        // need to transform multitextbox values without digest\n        // so must be a new object, not a reference\n        var settingsToSave = JSON.parse(JSON.stringify(_this.settingsSyncModel));\n        settingsToSave.forEach(function (v) {\n          if (v.view.includes(_constants.constants.multipletextbox)) {\n            for (var _i = 0, _Object$entries = Object.entries(v.value); _i < _Object$entries.length; _i++) {\n              var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n                  key = _Object$entries$_i[0],\n                  value = _Object$entries$_i[1];\n\n              v.value[key] = value.map(function (o) {\n                return o.value;\n              }).join(',');\n            }\n          } else if (v.view.includes(_constants.constants.checkboxlist)) {\n            for (var _i2 = 0, _Object$entries2 = Object.entries(v.value); _i2 < _Object$entries2.length; _i2++) {\n              var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n                  _key = _Object$entries2$_i[0],\n                  _value = _Object$entries2$_i[1];\n\n              v.value[_key] = _value.join(',');\n            }\n          }\n        });\n\n        _this.preflightService.saveSettings(settingsToSave, _this.tabs).then(function (_) {\n          return _this.$scope.preflightSettingsForm.$setPristine();\n        });\n      }\n    });\n\n    this.$scope = $scope;\n    this.$q = $q;\n    this.notificationsService = notificationsService;\n    this.preflightService = preflightService;\n    this.languageResource = languageResource;\n    this.localizationService = localizationService;\n    this.languageChangeWatcher = $scope.$watch(function () {\n      return _this.currentLanguage;\n    }, function (newLang, oldLang) {\n      // update settings to only include the current variant\n      if (newLang && newLang !== oldLang) {\n        _this.settings.forEach(function (s) {\n          var syncSetting = _this.settingsSyncModel.find(function (x) {\n            return x.alias === s.alias;\n          }); // manage old language by updating the sync settings model,\n          // ensuring the value is an object\n\n\n          if (oldLang) {\n            if (!syncSetting.value) {\n              syncSetting.value = {};\n            }\n\n            syncSetting.value[oldLang] = s.value;\n          } // get the value for the new language and update the settings model\n\n\n          if (syncSetting.value && syncSetting.value[newLang]) {\n            s.value = syncSetting.value[newLang];\n          } else {\n            // set the value to a sensible default - array if type is checkboxlist\n            s.value = s.view.includes(_constants.constants.checkboxlist) || s.view.includes(_constants.constants.multipletextbox) ? [] : null;\n          }\n        });\n      }\n    });\n  }\n\n  _createClass(SettingsController, [{\n    key: \"$onDestroy\",\n    value: function $onDestroy() {\n      this.languageChangeWatcher();\n      this.testablePropertiesWatcher();\n    }\n  }, {\n    key: \"$onInit\",\n    value: function $onInit() {\n      var _this2 = this;\n\n      var promises = [this.preflightService.getSettings(), this.languageResource.getAll()];\n      this.$q.all(promises).then(function (resp) {\n        _this2.settingsSyncModel = resp[0].data.settings;\n        _this2.settings = JSON.parse(JSON.stringify(_this2.settingsSyncModel));\n        _this2.tabs = resp[0].data.tabs;\n        _this2.languages = resp[1];\n\n        var currentLanguage = _this2.languages.find(function (x) {\n          return x.isDefault;\n        }).culture;\n\n        _this2.settingsSyncModel.forEach(function (v) {\n          if (v.view.includes(_constants.constants.multipletextbox) && v.value) {\n            for (var _i3 = 0, _Object$entries3 = Object.entries(v.value); _i3 < _Object$entries3.length; _i3++) {\n              var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n                  key = _Object$entries3$_i[0],\n                  value = _Object$entries3$_i[1];\n\n              v.value[key] = value.split(',').map(function (val) {\n                return {\n                  value: val\n                };\n              }).sort(function (a, b) {\n                return a < b;\n              });\n            }\n          } else if (v.view.includes(_constants.constants.checkboxlist) && v.value) {\n            for (var _i4 = 0, _Object$entries4 = Object.entries(v.value); _i4 < _Object$entries4.length; _i4++) {\n              var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i4], 2),\n                  _key2 = _Object$entries4$_i[0],\n                  _value2 = _Object$entries4$_i[1];\n\n              v.value[_key2] = _value2.split(',');\n            }\n          }\n        });\n\n        _this2.settings.forEach(function (v) {\n          var syncSetting = _this2.settingsSyncModel.find(function (x) {\n            return x.alias === v.alias;\n          });\n\n          v.value = syncSetting.value ? syncSetting.value[currentLanguage] : null;\n\n          if (v.view.includes('slider')) {\n            v.config = {\n              handle: 'round',\n              initVal1: v.alias === 'longWordSyllables' ? 5 : 65,\n              maxVal: v.alias === 'longWordSyllables' ? 10 : 100,\n              minVal: 0,\n              orientation: 'horizontal',\n              step: 1,\n              tooltip: 'always',\n              tooltipPosition: 'bottom'\n            };\n          } else if (v.view.includes(_constants.constants.multipletextbox)) {\n            v.config = {\n              min: 0,\n              max: 0\n            };\n            v.validation = {};\n          } else if (v.view.includes(_constants.constants.checkboxlist)) {\n            v.config = {\n              items: v.prevalues\n            };\n          }\n        });\n\n        _this2.currentLanguage = currentLanguage;\n\n        _this2.watchTestableProperties();\n      });\n    }\n    /**\r\n     * \r\n     */\n\n  }]);\n\n  return SettingsController;\n}();\n\nexports.SettingsController = SettingsController;\n\n_defineProperty(SettingsController, \"controllerName\", 'preflight.settings.controller');\n\n},{\"../constants\":7}],12:[function(require,module,exports){\n\"use strict\";\n\n(function () {\n  var postSaveUrl = '/umbracoapi/content/postsave';\n  var presaveText;\n\n  function interceptor(notificationsService, overlayService, editorState, $rootScope, $q, $injector) {\n    var checkGroup = function checkGroup(userGroupOptInOut, culture) {\n      var value = userGroupOptInOut.value[culture];\n      var enabledGroups = userGroupOptInOut.prevalues.filter(function (x) {\n        return value.includes(x.value);\n      }).map(function (x) {\n        return x.key;\n      });\n      var localizationService;\n      $injector.invoke(['localizationService', function (service) {\n        return localizationService = service;\n      }]);\n      $injector.invoke(['authResource', function (authResource) {\n        var promises = [authResource.getCurrentUser(), localizationService.localize('preflight_presaveText')];\n        $q.all(promises).then(function (resp) {\n          var currentUser = resp[0];\n          presaveText = resp[1];\n\n          if (enabledGroups.some(function (x) {\n            return currentUser.userGroups.includes(x);\n          })) {\n            notificationsService.info('Preflight', presaveText);\n          }\n        });\n      }]);\n    };\n\n    return {\n      request: function request(_request) {\n        if (_request.url.toLowerCase().includes(postSaveUrl)) {\n          $injector.invoke(['preflightService', function (s) {\n            s.getSettings().then(function (resp) {\n              var settings = resp.data.settings; // settings values are a dictionary keyed by culture\n\n              var variantsToSave = _request.data.value.variants.filter(function (v) {\n                return v.save;\n              });\n\n              var preflightVars = Umbraco.Sys.ServerVariables.Preflight;\n              variantsToSave.forEach(function (variant) {\n                var culture = variant.language ? variant.language.culture : preflightVars.DefaultCulture;\n                var runOnSave = settings.find(function (x) {\n                  return x.guid === preflightVars.SettingsGuid.BindSaveHandler;\n                });\n\n                if (runOnSave && runOnSave.value[culture] === '1') {\n                  var userGroupOptInOut = settings.find(function (x) {\n                    return x.guid === preflightVars.SettingsGuid.UserGroupOptIn;\n                  });\n                  checkGroup(userGroupOptInOut, culture);\n                }\n              });\n            });\n          }]);\n        }\n\n        return _request || $q.when(_request);\n      },\n      response: function response(_response) {\n        try {\n          if (_response.config.url.toLowerCase().includes(postSaveUrl)) {\n            var index = notificationsService.current.findIndex(function (x) {\n              return x.message === presaveText;\n            });\n\n            if (index > -1) {\n              setTimeout(function () {\n                return notificationsService.remove(index);\n              }, 1500);\n            }\n\n            if (_response.data.notifications) {\n              var notification = _response.data.notifications.filter(function (f) {\n                return f.header === Umbraco.Sys.ServerVariables.Preflight.ContentFailedChecks;\n              })[0];\n\n              if (notification) {\n                _response.data.notifications = [];\n                overlayService.open({\n                  view: \"\".concat(Umbraco.Sys.ServerVariables.Preflight.PluginPath, \"/views/failed.notification.html\"),\n                  submitButtonLabelKey: 'preflight_review',\n                  hideHeader: true,\n                  saveCancelled: notification.message.includes('_True'),\n                  submit: function submit() {\n                    $rootScope.$emit('showPreflight', {\n                      nodeId: editorState.current.id\n                    });\n                    overlayService.close();\n                  },\n                  close: function close() {\n                    return overlayService.close();\n                  }\n                });\n              }\n            }\n          }\n        } catch (err) {\n          console.log(err.message);\n        }\n\n        return _response || $q.when(_response);\n      }\n    };\n  }\n\n  angular.module('preflight').factory('preflight.save.interceptor', ['notificationsService', 'overlayService', 'editorState', '$rootScope', '$q', '$injector', interceptor]).config([\"$httpProvider\", function ($httpProvider) {\n    return $httpProvider.interceptors.push('preflight.save.interceptor');\n  }]);\n})();\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PluginsModule = void 0;\n\nvar _linkhealthResult = require(\"./linkhealth/linkhealth.result.component\");\n\nvar _readabilityPlugin = require(\"./readability/readability.plugin.controller\");\n\nvar PluginsModule = angular.module('preflight.plugins', []).component(_linkhealthResult.LinkHealthResultComponent.name, _linkhealthResult.LinkHealthResultComponent).controller(_readabilityPlugin.ReadabilityPluginController.controllerName, _readabilityPlugin.ReadabilityPluginController).name;\nexports.PluginsModule = PluginsModule;\n\n},{\"./linkhealth/linkhealth.result.component\":14,\"./readability/readability.plugin.controller\":15}],14:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkHealthResultComponent = void 0;\nvar LinkHealthResultComponent = {\n  name: 'linkHealthResult',\n  transclude: true,\n  bindings: {\n    results: '<'\n  },\n  template: \"\\n        <table class=\\\"linkhealth-result-table\\\">\\n            <thead>\\n                <tr><th>Link text</th> <th>Link target</th> <th>Link status</th></tr>\\n            </thead>\\n            <tr ng-repeat=\\\"link in $ctrl.results\\\"><td ng-bind=\\\"link.text\\\"></td><td ng-bind=\\\"link.href\\\"></td><td ng-bind=\\\"link.status\\\"></td></tr>\\n        </table>\"\n};\nexports.LinkHealthResultComponent = LinkHealthResultComponent;\n\n},{}],15:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReadabilityPluginController = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ReadabilityPluginController = function ReadabilityPluginController($scope, overlayService) {\n  var _this = this;\n\n  _classCallCheck(this, ReadabilityPluginController);\n\n  _defineProperty(this, \"$scope\", void 0);\n\n  _defineProperty(this, \"overlayService\", void 0);\n\n  _defineProperty(this, \"help\", function () {\n    var overlay = {\n      view: \"\".concat(Umbraco.Sys.ServerVariables.Preflight.PluginPath, \"/plugins/readability/readability.overlay.html\"),\n      title: _this.$scope.model.name,\n      size: 'medium',\n      content: _this.$scope.model.description,\n      close: function close() {\n        return _this.overlayService.close();\n      }\n    };\n\n    _this.overlayService.open(overlay);\n  });\n\n  this.$scope = $scope;\n  this.overlayService = overlayService;\n};\n\nexports.ReadabilityPluginController = ReadabilityPluginController;\n\n_defineProperty(ReadabilityPluginController, \"controllerName\", 'readability.plugin.controller');\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServicesModule = void 0;\n\nvar _preflight = require(\"./preflight.service\");\n\nvar _preflight2 = require(\"./preflight.hub\");\n\nvar ServicesModule = angular.module('preflight.services', []).service(_preflight.PreflightService.serviceName, _preflight.PreflightService).service(_preflight2.PreflightHub.serviceName, _preflight2.PreflightHub).name;\nexports.ServicesModule = ServicesModule;\n\n},{\"./preflight.hub\":17,\"./preflight.service\":18}],17:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PreflightHub = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PreflightHub = /*#__PURE__*/function () {\n  function PreflightHub($rootScope, $q, assetsService) {\n    var _this = this;\n\n    _classCallCheck(this, PreflightHub);\n\n    _defineProperty(this, \"$rootScope\", void 0);\n\n    _defineProperty(this, \"$q\", void 0);\n\n    _defineProperty(this, \"assetsService\", void 0);\n\n    _defineProperty(this, \"scripts\", []);\n\n    _defineProperty(this, \"callbacks\", []);\n\n    _defineProperty(this, \"starting\", false);\n\n    _defineProperty(this, \"platform\", Umbraco.Sys.ServerVariables.Preflight.Platform);\n\n    _defineProperty(this, \"setupHub\", function (callback) {\n      var proxy;\n      var hub = {};\n\n      if (_this.platform === 'CORE') {\n        $.connection = new signalR.HubConnectionBuilder().withUrl(Umbraco.Sys.ServerVariables.Preflight.signalRHub).withAutomaticReconnect().configureLogging(signalR.LogLevel.Warning).build();\n        proxy = $.connection;\n      } else {\n        proxy = $.connection.preflightHub;\n      }\n\n      if (proxy !== undefined) {\n        hub = {\n          active: true,\n          start: function start(callback) {\n            if (_this.platform === 'CORE') {\n              try {\n                proxy.start().then(function () {\n                  return callback ? callback() : {};\n                })[\"catch\"](function () {\n                  return console.warn('Failed to start hub');\n                });\n              } catch (e) {\n                console.warn('Could not setup signalR connection', e);\n              }\n            } else {\n              if ($.connection.hub.state !== $.connection.connectionState.disconnected) {\n                $.connection.hub.stop(true, true);\n              }\n\n              $.connection.hub.start();\n              callback ? callback() : {};\n            }\n          },\n          on: function on(eventName, callback) {\n            proxy.on(eventName, function (result) {\n              _this.$rootScope.$apply(function () {\n                if (callback) {\n                  callback(result);\n                }\n              });\n            });\n          }\n        };\n      } else {\n        hub = {\n          on: function on() {},\n          start: function start() {\n            return console.warn('No hub to start');\n          }\n        };\n      }\n\n      return callback(hub);\n    });\n\n    this.$rootScope = $rootScope;\n    this.$q = $q;\n    this.assetsService = assetsService;\n    var umbracoPath = Umbraco.Sys.ServerVariables.umbracoSettings.umbracoPath;\n\n    if (this.platform === 'CORE') {\n      this.scripts = [umbracoPath + '/lib/signalr/signalr.min.js'];\n    } else {\n      this.scripts = [umbracoPath + '/lib/signalr/jquery.signalr.js', umbracoPath + '/backoffice/signalr/hubs'];\n    }\n  }\n\n  _createClass(PreflightHub, [{\n    key: \"processCallbacks\",\n    value:\n    /**\r\n     * Function is common across 472 and 5.0\r\n     * */\n    function processCallbacks() {\n      while (this.callbacks.length) {\n        var cb = this.callbacks.pop();\n        this.setupHub(cb);\n      }\n\n      this.starting = false;\n    }\n    /**\r\n     * Function is common across 472 and 5.0 \r\n     * @param callback\r\n     */\n\n  }, {\n    key: \"initHub\",\n    value: function initHub(callback) {\n      var _this2 = this;\n\n      this.callbacks.push(callback);\n\n      if (!this.starting) {\n        if ($.connection === undefined) {\n          this.starting = true;\n          var promises = [];\n          this.scripts.forEach(function (script) {\n            return promises.push(_this2.assetsService.loadJs(script));\n          });\n          this.$q.all(promises).then(function () {\n            return _this2.processCallbacks();\n          });\n        } else {\n          this.processCallbacks();\n        }\n      }\n    }\n  }]);\n\n  return PreflightHub;\n}();\n\nexports.PreflightHub = PreflightHub;\n\n_defineProperty(PreflightHub, \"serviceName\", 'preflightHub');\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PreflightService = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PreflightService = function PreflightService($http, umbRequestHelper) {\n  var _this = this;\n\n  _classCallCheck(this, PreflightService);\n\n  _defineProperty(this, \"$http\", void 0);\n\n  _defineProperty(this, \"umbRequestHelper\", void 0);\n\n  _defineProperty(this, \"urlBase\", Umbraco.Sys.ServerVariables.Preflight.ApiPath);\n\n  _defineProperty(this, \"request\", function (method, url, data) {\n    return _this.umbRequestHelper.resourcePromise(method === 'GET' ? _this.$http.get(_this.urlBase + url) : _this.$http.post(_this.urlBase + url, data), 'Something broke');\n  });\n\n  _defineProperty(this, \"check\", function (id, culture) {\n    return _this.request('GET', \"Check/\".concat(id, \"/\").concat(culture, \" \"));\n  });\n\n  _defineProperty(this, \"checkDirty\", function (data) {\n    return _this.request('POST', \"CheckDirty\", data);\n  });\n\n  _defineProperty(this, \"getSettings\", function () {\n    return _this.request('GET', \"GetSettings\");\n  });\n\n  _defineProperty(this, \"saveSettings\", function (settings, tabs) {\n    return _this.request('POST', \"SaveSettings\", {\n      settings: settings,\n      tabs: tabs\n    });\n  });\n\n  this.$http = $http;\n  this.umbRequestHelper = umbRequestHelper;\n};\n\nexports.PreflightService = PreflightService;\n\n_defineProperty(PreflightService, \"serviceName\", 'preflightService');\n\n},{}]},{},[1,7,5,2,9,10,11,8,12,13,17,18,16,3,6,4,14,15]);\n"],"file":"preflight.js"}